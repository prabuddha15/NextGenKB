/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.prabuddha.spl.model.avro.autogen;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LeagueAVRO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LeagueAVRO\",\"namespace\":\"com.prabuddha.spl.model.avro.autogen\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"name\",\"type\":[\"string\",\"null\"]},{\"name\":\"country\",\"type\":[\"string\",\"null\"]},{\"name\":\"historicalData\",\"type\":[\"string\",\"null\"]},{\"name\":\"fixtures\",\"type\":[\"string\",\"null\"]},{\"name\":\"livescore\",\"type\":[\"string\",\"null\"]},{\"name\":\"numberOfMatches\",\"type\":[\"int\",\"null\"]},{\"name\":\"latestMatch\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int id;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence country;
  @Deprecated public java.lang.CharSequence historicalData;
  @Deprecated public java.lang.CharSequence fixtures;
  @Deprecated public java.lang.CharSequence livescore;
  @Deprecated public java.lang.Integer numberOfMatches;
  @Deprecated public java.lang.CharSequence latestMatch;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public LeagueAVRO() {}

  /**
   * All-args constructor.
   */
  public LeagueAVRO(java.lang.Integer id, java.lang.CharSequence name, java.lang.CharSequence country, java.lang.CharSequence historicalData, java.lang.CharSequence fixtures, java.lang.CharSequence livescore, java.lang.Integer numberOfMatches, java.lang.CharSequence latestMatch) {
    this.id = id;
    this.name = name;
    this.country = country;
    this.historicalData = historicalData;
    this.fixtures = fixtures;
    this.livescore = livescore;
    this.numberOfMatches = numberOfMatches;
    this.latestMatch = latestMatch;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return country;
    case 3: return historicalData;
    case 4: return fixtures;
    case 5: return livescore;
    case 6: return numberOfMatches;
    case 7: return latestMatch;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: country = (java.lang.CharSequence)value$; break;
    case 3: historicalData = (java.lang.CharSequence)value$; break;
    case 4: fixtures = (java.lang.CharSequence)value$; break;
    case 5: livescore = (java.lang.CharSequence)value$; break;
    case 6: numberOfMatches = (java.lang.Integer)value$; break;
    case 7: latestMatch = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'historicalData' field.
   */
  public java.lang.CharSequence getHistoricalData() {
    return historicalData;
  }

  /**
   * Sets the value of the 'historicalData' field.
   * @param value the value to set.
   */
  public void setHistoricalData(java.lang.CharSequence value) {
    this.historicalData = value;
  }

  /**
   * Gets the value of the 'fixtures' field.
   */
  public java.lang.CharSequence getFixtures() {
    return fixtures;
  }

  /**
   * Sets the value of the 'fixtures' field.
   * @param value the value to set.
   */
  public void setFixtures(java.lang.CharSequence value) {
    this.fixtures = value;
  }

  /**
   * Gets the value of the 'livescore' field.
   */
  public java.lang.CharSequence getLivescore() {
    return livescore;
  }

  /**
   * Sets the value of the 'livescore' field.
   * @param value the value to set.
   */
  public void setLivescore(java.lang.CharSequence value) {
    this.livescore = value;
  }

  /**
   * Gets the value of the 'numberOfMatches' field.
   */
  public java.lang.Integer getNumberOfMatches() {
    return numberOfMatches;
  }

  /**
   * Sets the value of the 'numberOfMatches' field.
   * @param value the value to set.
   */
  public void setNumberOfMatches(java.lang.Integer value) {
    this.numberOfMatches = value;
  }

  /**
   * Gets the value of the 'latestMatch' field.
   */
  public java.lang.CharSequence getLatestMatch() {
    return latestMatch;
  }

  /**
   * Sets the value of the 'latestMatch' field.
   * @param value the value to set.
   */
  public void setLatestMatch(java.lang.CharSequence value) {
    this.latestMatch = value;
  }

  /** Creates a new LeagueAVRO RecordBuilder */
  public static com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder newBuilder() {
    return new com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder();
  }
  
  /** Creates a new LeagueAVRO RecordBuilder by copying an existing Builder */
  public static com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder newBuilder(com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder other) {
    return new com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder(other);
  }
  
  /** Creates a new LeagueAVRO RecordBuilder by copying an existing LeagueAVRO instance */
  public static com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder newBuilder(com.prabuddha.spl.model.avro.autogen.LeagueAVRO other) {
    return new com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder(other);
  }
  
  /**
   * RecordBuilder for LeagueAVRO instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LeagueAVRO>
    implements org.apache.avro.data.RecordBuilder<LeagueAVRO> {

    private int id;
    private java.lang.CharSequence name;
    private java.lang.CharSequence country;
    private java.lang.CharSequence historicalData;
    private java.lang.CharSequence fixtures;
    private java.lang.CharSequence livescore;
    private java.lang.Integer numberOfMatches;
    private java.lang.CharSequence latestMatch;

    /** Creates a new Builder */
    private Builder() {
      super(com.prabuddha.spl.model.avro.autogen.LeagueAVRO.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.country)) {
        this.country = data().deepCopy(fields()[2].schema(), other.country);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.historicalData)) {
        this.historicalData = data().deepCopy(fields()[3].schema(), other.historicalData);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fixtures)) {
        this.fixtures = data().deepCopy(fields()[4].schema(), other.fixtures);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.livescore)) {
        this.livescore = data().deepCopy(fields()[5].schema(), other.livescore);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.numberOfMatches)) {
        this.numberOfMatches = data().deepCopy(fields()[6].schema(), other.numberOfMatches);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.latestMatch)) {
        this.latestMatch = data().deepCopy(fields()[7].schema(), other.latestMatch);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing LeagueAVRO instance */
    private Builder(com.prabuddha.spl.model.avro.autogen.LeagueAVRO other) {
            super(com.prabuddha.spl.model.avro.autogen.LeagueAVRO.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.country)) {
        this.country = data().deepCopy(fields()[2].schema(), other.country);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.historicalData)) {
        this.historicalData = data().deepCopy(fields()[3].schema(), other.historicalData);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.fixtures)) {
        this.fixtures = data().deepCopy(fields()[4].schema(), other.fixtures);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.livescore)) {
        this.livescore = data().deepCopy(fields()[5].schema(), other.livescore);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.numberOfMatches)) {
        this.numberOfMatches = data().deepCopy(fields()[6].schema(), other.numberOfMatches);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.latestMatch)) {
        this.latestMatch = data().deepCopy(fields()[7].schema(), other.latestMatch);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Integer getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'name' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'country' field */
    public java.lang.CharSequence getCountry() {
      return country;
    }
    
    /** Sets the value of the 'country' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.country = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'country' field has been set */
    public boolean hasCountry() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'country' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder clearCountry() {
      country = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'historicalData' field */
    public java.lang.CharSequence getHistoricalData() {
      return historicalData;
    }
    
    /** Sets the value of the 'historicalData' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder setHistoricalData(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.historicalData = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'historicalData' field has been set */
    public boolean hasHistoricalData() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'historicalData' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder clearHistoricalData() {
      historicalData = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'fixtures' field */
    public java.lang.CharSequence getFixtures() {
      return fixtures;
    }
    
    /** Sets the value of the 'fixtures' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder setFixtures(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.fixtures = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'fixtures' field has been set */
    public boolean hasFixtures() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'fixtures' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder clearFixtures() {
      fixtures = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'livescore' field */
    public java.lang.CharSequence getLivescore() {
      return livescore;
    }
    
    /** Sets the value of the 'livescore' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder setLivescore(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.livescore = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'livescore' field has been set */
    public boolean hasLivescore() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'livescore' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder clearLivescore() {
      livescore = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'numberOfMatches' field */
    public java.lang.Integer getNumberOfMatches() {
      return numberOfMatches;
    }
    
    /** Sets the value of the 'numberOfMatches' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder setNumberOfMatches(java.lang.Integer value) {
      validate(fields()[6], value);
      this.numberOfMatches = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'numberOfMatches' field has been set */
    public boolean hasNumberOfMatches() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'numberOfMatches' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder clearNumberOfMatches() {
      numberOfMatches = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'latestMatch' field */
    public java.lang.CharSequence getLatestMatch() {
      return latestMatch;
    }
    
    /** Sets the value of the 'latestMatch' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder setLatestMatch(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.latestMatch = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'latestMatch' field has been set */
    public boolean hasLatestMatch() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'latestMatch' field */
    public com.prabuddha.spl.model.avro.autogen.LeagueAVRO.Builder clearLatestMatch() {
      latestMatch = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public LeagueAVRO build() {
      try {
        LeagueAVRO record = new LeagueAVRO();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.country = fieldSetFlags()[2] ? this.country : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.historicalData = fieldSetFlags()[3] ? this.historicalData : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.fixtures = fieldSetFlags()[4] ? this.fixtures : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.livescore = fieldSetFlags()[5] ? this.livescore : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.numberOfMatches = fieldSetFlags()[6] ? this.numberOfMatches : (java.lang.Integer) defaultValue(fields()[6]);
        record.latestMatch = fieldSetFlags()[7] ? this.latestMatch : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
